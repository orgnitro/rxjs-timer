{"version":3,"sources":["components/TimerScreen.js","components/StartStopBtn.js","components/WaitBtn.js","components/ResetBtn.js","components/Timer.js","App.js","index.js"],"names":["TimerScreen","props","style","color","fontWeight","textAlign","hours","minutes","seconds","StartBtn","backgroundColor","borderRadius","border","width","height","margin","padding","onClick","handler","WaitBtn","ResetBtn","Timer","state","time","waitBtnClicked","counterVal","isRunning","subject","Subject","setTime","bind","startHandler","waitHandler","resetHandler","this","next","setState","setTimeout","val","hourInt","Math","floor","minInt","secInt","pipe","startWith","scan","acc","tap","current","switchMap","interval","NEVER","subscribe","fontSize","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1837044.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default function TimerScreen(props) {\r\n  const screenStyle = {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center'\r\n  }\r\n  return (\r\n    <div style={screenStyle}>\r\n      {props.hours}:{props.minutes}:{props.seconds}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function StartBtn(props) {\r\n  const style={\r\n      backgroundColor: '#a2d194',\r\n      borderRadius: '2px',\r\n      border: 'none',\r\n      width: '20%',\r\n      height: '30px',\r\n      margin: '10px',\r\n      padding: '0',\r\n  }\r\n  \r\n  return (\r\n    <button style={style} onClick={props.handler}>Start/Stop</button>\r\n  )\r\n}","import React from 'react'\r\n\r\n\r\nexport default function WaitBtn(props) {\r\n  const style={\r\n    backgroundColor: '#fedc81',\r\n    borderRadius: '2px',\r\n    border: 'none',\r\n    width: '20%',\r\n    height: '30px',\r\n    margin: '10px',\r\n    padding: '0',\r\n}\r\n\r\n  return (\r\n    <button style={style} onClick={props.handler}>Wait</button>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function ResetBtn(props) {\r\n  const style={\r\n    backgroundColor: '#e84258',\r\n    borderRadius: '2px',\r\n    border: 'none',\r\n    width: '20%',\r\n    height: '30px',\r\n    margin: '10px',\r\n    padding: '0'\r\n}\r\n\r\n  return (\r\n    <button style={style} onClick={props.handler}>Reset</button>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport TimerScreen from './TimerScreen'\r\nimport StartStopBtn from './StartStopBtn'\r\nimport WaitBtn from './WaitBtn'\r\nimport ResetBtn from './ResetBtn'\r\n\r\nimport { interval, NEVER, Subject } from 'rxjs'\r\nimport { switchMap, scan, startWith, tap } from 'rxjs/operators'\r\n\r\n\r\nexport default class Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      time: {\r\n        seconds: '00',\r\n        minutes: '00',\r\n        hours: '00',\r\n      },\r\n      waitBtnClicked: false,\r\n      counterVal: 0,\r\n      isRunning: false\r\n    }\r\n    this.subject = new Subject();\r\n\r\n    this.setTime = this.setTime.bind(this);\r\n    this.startHandler = this.startHandler.bind(this);\r\n    this.waitHandler = this.waitHandler.bind(this);\r\n    this.resetHandler = this.resetHandler.bind(this);\r\n  }\r\n\r\n    startHandler() {\r\n      if (this.state.isRunning) {\r\n        this.subject.next({counterVal: 0, isRunning: false});\r\n        this.setState({isRunning: false, counterVal: 0});\r\n      } else {\r\n        this.subject.next({isRunning: true});\r\n        this.setState({isRunning: true});\r\n      }\r\n    }\r\n\r\n    waitHandler() {\r\n      if (this.state.waitBtnClicked) {\r\n        this.subject.next({isRunning: false});\r\n        this.setState({isRunning: false});\r\n      } else{\r\n        this.setState({waitBtnClicked: true});\r\n        setTimeout(() => {\r\n          this.setState({waitBtnClicked: false});\r\n        }, 300);\r\n      }\r\n    }\r\n\r\n    resetHandler() {\r\n      this.subject.next({counterVal: 0});\r\n      this.setState({counterVal: 0});\r\n    }\r\n\r\n    setTime(val) {\r\n      const hourInt = Math.floor(val / (60*60));\r\n      const minInt = Math.floor(val / 60);\r\n      const secInt = val % 60;\r\n\r\n      this.setState({\r\n        time: {\r\n          hours: (hourInt < 10) ? `0${hourInt}` : hourInt,\r\n          minutes: (minInt < 10) ? `0${minInt}` : minInt,\r\n          seconds: (secInt < 10) ? `0${secInt}` : secInt\r\n        }\r\n      });\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.subject.pipe(\r\n        startWith({counterVal: 0, isRunning: false}),\r\n        scan( (acc, val) => ({ ...acc, ...val })),\r\n        tap( current => {\r\n          this.setTime(current.counterVal);\r\n        }),\r\n        switchMap( current => !current.isRunning ? NEVER : interval(1000).pipe(\r\n          tap( () => {\r\n            current.counterVal += 1;\r\n            this.setTime(current.counterVal);\r\n          })\r\n        ))\r\n      ).subscribe();\r\n    }\r\n\r\n  render() {\r\n    const hours = this.state.time.hours;\r\n    const minutes = this.state.time.minutes;\r\n    const seconds = this.state.time.seconds;\r\n    const appStyle = {\r\n      fontSize: '2vw',\r\n      backgroundColor: '#333333',\r\n      borderRadius: '5px',\r\n      width: '40%',\r\n      height: '40%',\r\n      margin: 'auto',\r\n      padding: '20px 5px'\r\n    }\r\n    \r\n    return (\r\n      <div style={appStyle}>\r\n      <TimerScreen hours={hours} minutes={minutes} seconds={seconds} />\r\n      <StartStopBtn handler={this.startHandler} />\r\n      <WaitBtn handler={this.waitHandler} />\r\n      <ResetBtn handler={this.resetHandler} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import './App.css'\r\nimport React from 'react'\r\nimport Timer from './components/Timer'\r\n\r\nexport default function App() {\r\n  return (\r\n    <Timer />\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}